# NOTE:
#  Unlike the cd-workflow.yml, this workflow can only be manually triggered
#  and will not create a new release tag. Therefore, if you want to deploy
#  a new release, you must first create a new release tag in the git repository.
#
# USECASE:
#  - If a release tag already exists, but you want to re-deploy the same version (i.e. failed deployment)
#  - If you want to release or re-deploy a given version for the plugin (Gradle Portal) only.
#  - If you want to release or re-deploy a given version for the jvm (Maven Central) only.
name: MANUAL-DEPLOYMENT

on:
  workflow_dispatch:
    inputs:
      deployment:
        type: choice
        required: true
        description: 'Which JARs to Deploy/Publish?'
        default: 'all'
        options:
          - 'propactive-jvm (Maven Central Repository)'
          - 'propactive-plugin (Gradle Plugin Portal)'
          - 'all'
      version:
        type: string
        required: true
        description: 'Version to release (NOTE: must follow the regular language of: "[0-9]+.[0-9]+.[0-9]+")'

env:
  VERSION: ${{ inputs.version }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_GNUPG_EXECUTABLE: ${{ vars.SIGNING_GNUPG_EXECUTABLE }}
  SIGNING_GNUPG_HOME_DIR: ${{ vars.SIGNING_GNUPG_HOME_DIR }}
  SIGNING_GNUPG_KEY_NAME: ${{ secrets.SIGNING_GNUPG_KEY_NAME }}
  SIGNING_GNUPG_PASSPHRASE: ${{ secrets.SIGNING_GNUPG_PASSPHRASE }}
  SIGNING_GNUPG_PRIVATE_KEY: ${{ secrets.SIGNING_GNUPG_PRIVATE_KEY }}
  GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
  GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}

jobs:
  Manual-Deployment:
    runs-on: ubuntu-22.04
    steps:
      - name: 'Checkout to current branch'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Publishing to maven central'
        if: (inputs.deployment == 'propactive-jvm (Maven Central Repository)' || inputs.deployment == 'all')
        run: make publish-propactive-jvm-jars SIGNING_GNUPG_PRIVATE_KEY="${{ secrets.SIGNING_GNUPG_PRIVATE_KEY }}"
      - name: 'Publishing to gradle plugin'
        if: (inputs.deployment == 'propactive-plugin (Gradle Plugin Portal)'  || inputs.deployment == 'all')
        run: make publish-propactive-plugin-jars SIGNING_GNUPG_PRIVATE_KEY="${{ secrets.SIGNING_GNUPG_PRIVATE_KEY }}"
