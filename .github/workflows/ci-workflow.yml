name: CI

on: [workflow_call]

jobs:
  Test-Runner:
    runs-on: ubuntu-22.04
    steps:
      - name: 'Checkout to current branch'
        uses: actions/checkout@v3
      # Next steps:
      # 1. Create a directory for the gradle cache
      # 2. Test it inside the docker container by trying to create a file in the cache directory
      - name: 'Sandbox'
        run: |
          echo "---------------------------- For each user check their uid and gid"
          id
          echo "---------------------------- Checking $HOME ownerships"
          ls -la $HOME
          echo "---------------------------- Checking $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE
          echo "---------------------------- Creating $HOME/.gradle/test"
          mkdir -p $HOME/.gradle/test

          echo "---------------------------- For each user check their uid and gid (Docker)"
          make run-cmd-inside-toolchain-runner CMD="id"
          echo "---------------------------- Changing "gradle" user uid and gid to match host user"
          make run-cmd-inside-toolchain-runner CMD="usermod -u 1001 gradle; groupmod -g 127 gradle; id gradle"
          echo "---------------------------- Checking /home ownerships (Docker)"
          make run-cmd-inside-toolchain-runner CMD="ls -la /home"
          echo "---------------------------- Checking Propactive workspace (Docker)"
          make run-cmd-inside-toolchain-runner CMD="ls -la /home/gradle/propactive"
          echo "---------------------------- Creating /home/.gradle/test (Docker)"
          make run-cmd-inside-toolchain-runner CMD="mkdir -p /home/.gradle/test"
      - name: 'Setup Gradle caching'
        uses: actions/cache@v3
        with:
          path: $HOME/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: 'tests: propactive-jvm'
        run: make test-propactive-jvm
      - name: 'tests: propactive-plugin (acceptance)'
        run: make test-acceptance-propactive-plugin
      - name: 'tests: propactive-plugin (integration)'
        run: make test-integration-propactive-plugin
      # TMP: #70 This should be removed once gradle-nexus/publish-plugin/issues/208 is fixed
      - name: 'A timebomb to address #70 on the 01/05/2023'
        run: |
          if [[ $(date +%s) -gt 1682895600 ]]; then
            echo "It has been 1 month since #70 was opened."
            echo "Please check if gradle-nexus/publish-plugin/issues/208 has been fixed."
            echo "  If it has, please update the plugin and re-enable the CD workflow."
            echo "  else, please increase this timebomb by 1 month."
            echo "See: propactive/propactive/issues/70"
            exit 1
          fi
      - name: 'Uploading test artifacts'
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: |
            ./*/build/test-results/test/*.xml
            ./*/build/reports
      - name: 'Running KtLinter'
        run: make check-linter

  Test-Reporter:
    needs: Test-Runner
    runs-on: ubuntu-22.04
    steps:
      - name: 'Checkout to current branch'
        uses: actions/checkout@v3
      - name: 'Downloading all artifacts'
        uses: actions/download-artifact@v3
      - name: 'Generating test report for Github actions'
        uses: dorny/test-reporter@v1.6.0
        with:
          name: 'Test Report: JUnit'
          path: ./test-artifacts/*/build/test-results/test/*.xml
          reporter: java-junit
      - name: 'Uploading propactive-jvm coverage results to CodeClimate'
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          JACOCO_SOURCE_PATH: "${{ github.workspace }}/propactive-jvm/src/main/kotlin"
        with:
          coverageLocations: ${{ github.workspace }}/test-artifacts/propactive-jvm/build/reports/jacoco/test/jacocoTestReport.xml:jacoco
